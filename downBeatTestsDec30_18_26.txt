Test song: 2 numMeasures: 32.0
Passed

Test song: 3 numMeasures: 32.0
Contains correct down beat 2
Remaining DownBeats
1:3:20.0: [2.0, 8.0, 9.0, 0.0, 0.0, 0.0, 8.0, 10.0, 32.0, 0.3125, 1.8]
1:6:9.4: [2.0, 2.0, 5.0, 0.0, 0.0, 0.0, 3.0, 6.0, 16.0, 0.375, 1.5]
Passed anyways: 1:3:1.0: 

Used a 2|4 rule FULL/NUM_MEASURES_MARKED at 2/9.0 to find the downbeat.
The original winner was one of the following(
0:2:11.0: [3.0, 0.0, 5.0, 4.0, 0.0, 0.0, 3.0, 9.0, 16.0, 0.5625, 1.3333333333333333]
0:4:9.0: [3.0, 0.0, 1.0, 0.0, 0.0, 4.0, 1.0, 7.0, 8.0, 0.875, 1.1428571428571428]
0:6:11.0: [2.0, 2.0, 3.0, 0.0, 0.0, 1.0, 3.0, 4.0, 6.0, 0.6666666666666666, 1.75]
)
Test song: 4 numMeasures: 8.0
Contains correct down beat 3
Remaining DownBeats
0:2:8.3: [3.0, 0.0, 5.0, 4.0, 0.0, 0.0, 3.0, 9.0, 16.0, 0.5625, 1.3333333333333333]
0:4:2.147483647E9: [3.0, 0.0, 1.0, 0.0, 0.0, 4.0, 1.0, 7.0, 8.0, 0.875, 1.1428571428571428]
0:6:8.4: [2.0, 2.0, 3.0, 0.0, 0.0, 1.0, 3.0, 4.0, 6.0, 0.6666666666666666, 1.75]
Passed anyways: 0:4:1.0: 

Test song: 5 numMeasures: 16.0
Passed

Test song: 6 numMeasures: 14.0
Contains correct down beat 2
Remaining DownBeats
0:4:6.0: [0.0, 0.0, 3.0, 0.0, 0.0, 3.0, 0.0, 6.0, 14.0, 0.42857142857142855, 1.0]
1:4:14.200000000000001: [1.0, 11.0, 1.0, 0.0, 0.0, 0.0, 1.0, 11.0, 14.0, 0.7857142857142857, 1.0909090909090908]
Passed anyways: 1:4:1.0: 

Test song: 7 numMeasures: 16.0
Passed

Test song: 8 numMeasures: 16.0
Contains correct down beat 2
Remaining DownBeats
0:4:2.0: [0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 2.0, 16.0, 0.125, 1.0]
1:4:16.5: [0.0, 15.0, 0.0, 0.0, 0.0, 0.0, 0.0, 14.0, 16.0, 0.875, 1.0]
Passed anyways: 1:4:1.0: 

Test song: 9 numMeasures: 17.0
Passed

The original winner was one of the following(
0:3:10.0: [0.0, 0.0, 2.0, 0.0, 0.0, 8.0, 0.0, 10.0, 19.0, 0.5263157894736842, 1.0]
1:3:10.0: [2.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.0, 19.0, 0.47368421052631576, 1.0]
)
Test song: 10 numMeasures: 19.0
Contains correct down beat 4
Remaining DownBeats
0:3:10.0: [0.0, 0.0, 2.0, 0.0, 0.0, 8.0, 0.0, 10.0, 19.0, 0.5263157894736842, 1.0]
0:6:4.0: [0.0, 0.0, 0.0, 0.0, 0.0, 4.0, 0.0, 4.0, 10.0, 0.4, 1.0]
1:3:11.0: [2.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.0, 19.0, 0.47368421052631576, 1.0]
1:6:6.6000000000000005: [2.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 10.0, 0.5, 1.0]
Passed anyways: 1:3:1.0: 

Test song: 12 numMeasures: 16.0
Contains correct down beat 2
Remaining DownBeats
0:4:5.0: [0.0, 0.0, 1.0, 0.0, 0.0, 4.0, 0.0, 5.0, 16.0, 0.3125, 1.0]
1:4:12.4: [0.0, 4.0, 8.0, 0.0, 0.0, 0.0, 1.0, 10.0, 16.0, 0.625, 1.1]
Passed anyways: 1:4:1.0: 

Test song: 14 numMeasures: 8.0
Passed

Test song: 15 numMeasures: 16.0
Passed

Test song: 16 numMeasures: 20.0
Contains correct down beat 5
Remaining DownBeats
0:3:7.0: [0.0, 0.0, 0.0, 0.0, 0.0, 7.0, 0.0, 7.0, 20.0, 0.35, 1.0]
0:6:4.0: [0.0, 0.0, 0.0, 0.0, 0.0, 4.0, 0.0, 4.0, 10.0, 0.4, 1.0]
1:3:10.700000000000001: [0.0, 7.0, 3.0, 0.0, 0.0, 0.0, 1.0, 8.0, 20.0, 0.4, 1.125]
1:4:3.1: [0.0, 1.0, 0.0, 0.0, 0.0, 2.0, 0.0, 3.0, 15.0, 0.2, 1.0]
1:6:5.300000000000001: [0.0, 3.0, 2.0, 0.0, 0.0, 0.0, 0.0, 4.0, 10.0, 0.4, 1.0]
Passed anyways: 1:3:1.0: 

Used a 2|4 rule FULL/NUM_MEASURES_MARKED at 2/9.0 to find the downbeat.
The original winner was one of the following(
1:2:24.0: [8.0, 0.0, 8.0, 3.0, 0.0, 0.0, 8.0, 11.0, 32.0, 0.34375, 1.7272727272727273]
)
Test song: 18 numMeasures: 16.0
Contains correct down beat 3
Remaining DownBeats
1:2:16.8: [8.0, 0.0, 8.0, 3.0, 0.0, 0.0, 8.0, 11.0, 32.0, 0.34375, 1.7272727272727273]
1:4:2.147483647E9: [1.0, 3.0, 7.0, 0.0, 0.0, 0.0, 3.0, 7.0, 16.0, 0.4375, 1.4285714285714286]
1:6:8.5: [3.0, 2.0, 3.0, 0.0, 0.0, 0.0, 0.0, 7.0, 11.0, 0.6363636363636364, 1.0]
Passed anyways: 1:4:1.0: 

Test song: 19 numMeasures: 16.0
Contains correct down beat 2
Remaining DownBeats
0:4:6.0: [0.0, 0.0, 2.0, 0.0, 0.0, 4.0, 0.0, 6.0, 16.0, 0.375, 1.0]
1:4:21.8: [0.0, 8.0, 13.0, 0.0, 0.0, 0.0, 5.0, 15.0, 16.0, 0.9375, 1.3333333333333333]
Passed anyways: 1:4:1.0: 

Test song: 20 numMeasures: 8.0
Contains correct down beat 4
Remaining DownBeats
0:2:2.0: [0.0, 0.0, 2.0, 4.0, 0.0, 0.0, 0.0, 6.0, 16.0, 0.375, 1.0]
0:4:5.0: [0.0, 0.0, 1.0, 0.0, 0.0, 4.0, 0.0, 5.0, 8.0, 0.625, 1.0]
0:6:3.2: [0.0, 2.0, 0.0, 0.0, 0.0, 1.0, 0.0, 2.0, 6.0, 0.3333333333333333, 1.0]
1:4:NaN: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 0.0, NaN]
Passed anyways: 0:4:1.0: 

Test song: 21 numMeasures: 16.0
Contains correct down beat 2
Remaining DownBeats
0:4:12.0: [0.0, 0.0, 8.0, 0.0, 0.0, 4.0, 0.0, 12.0, 16.0, 0.75, 1.0]
1:4:19.4: [0.0, 4.0, 15.0, 0.0, 0.0, 0.0, 3.0, 15.0, 16.0, 0.9375, 1.2]
Passed anyways: 1:4:1.0: 

Test song: 22 numMeasures: 16.0
Passed

Test song: 23 numMeasures: 20.0
Passed

Test song: 24 numMeasures: 14.0
Contains correct down beat 3
Remaining DownBeats
0:3:5.5: [5.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 7.0, 14.0, 0.5, 1.0]
0:6:2.0: [0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 2.0, 7.0, 0.2857142857142857, 1.0]
1:6:NaN: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.0, 0.0, NaN]
Passed anyways: 0:3:1.0: 

Used a 2|4 rule FULL/NUM_MEASURES_MARKED at 2/9.0 to find the downbeat.
The original winner was one of the following(
0:2:28.0: [8.0, 0.0, 12.0, 7.0, 0.0, 0.0, 8.0, 19.0, 32.0, 0.59375, 1.4210526315789473]
)
Test song: 25 numMeasures: 16.0
Contains correct down beat 3
Remaining DownBeats
0:2:20.8: [8.0, 0.0, 12.0, 7.0, 0.0, 0.0, 8.0, 19.0, 32.0, 0.59375, 1.4210526315789473]
0:4:2.147483647E9: [8.0, 0.0, 2.0, 0.0, 0.0, 7.0, 2.0, 15.0, 16.0, 0.9375, 1.1333333333333333]
0:6:10.5: [3.0, 2.0, 3.0, 0.0, 0.0, 2.0, 2.0, 8.0, 11.0, 0.7272727272727273, 1.25]
Passed anyways: 0:4:1.0: 

Test song: 26 numMeasures: 16.0
Contains correct down beat 2
Remaining DownBeats
0:4:7.0: [0.0, 0.0, 0.0, 0.0, 0.0, 7.0, 0.0, 7.0, 16.0, 0.4375, 1.0]
1:4:12.5: [2.0, 3.0, 7.0, 0.0, 0.0, 0.0, 2.0, 9.0, 16.0, 0.5625, 1.2222222222222223]
Passed anyways: 1:4:1.0: 

Test song: 27 numMeasures: 32.0
Contains correct down beat 4
Remaining DownBeats
0:2:26.0: [0.0, 0.0, 26.0, 3.0, 0.0, 0.0, 0.0, 29.0, 32.0, 0.90625, 1.0]
0:4:13.0: [0.0, 0.0, 10.0, 0.0, 0.0, 3.0, 0.0, 13.0, 16.0, 0.8125, 1.0]
0:6:10.1: [0.0, 1.0, 9.0, 0.0, 0.0, 0.0, 1.0, 9.0, 11.0, 0.8181818181818182, 1.1111111111111112]
1:4:4.0: [0.0, 0.0, 4.0, 0.0, 0.0, 0.0, 0.0, 4.0, 16.0, 0.25, 1.0]
Passed anyways: 0:2:1.0: 

Used a 2|4 rule FULL/NUM_MEASURES_MARKED at 2/9.0 to find the downbeat.
The original winner was one of the following(
0:2:9.0: [1.0, 0.0, 7.0, 2.0, 0.0, 0.0, 1.0, 9.0, 16.0, 0.5625, 1.1111111111111112]
)
Test song: 28 numMeasures: 8.0
Contains correct down beat 3
Remaining DownBeats
0:2:8.1: [1.0, 0.0, 7.0, 2.0, 0.0, 0.0, 1.0, 9.0, 16.0, 0.5625, 1.1111111111111112]
0:4:2.147483647E9: [1.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 3.0, 8.0, 0.375, 1.0]
0:6:4.2: [1.0, 1.0, 2.0, 0.0, 0.0, 0.0, 1.0, 2.0, 6.0, 0.3333333333333333, 1.5]
Passed anyways: 0:4:1.0: 

Used a 3|6 rule percentage to find the downbeat
The original winner was one of the following(
1:3:21.0: [0.0, 15.0, 3.0, 0.0, 0.0, 0.0, 3.0, 14.0, 32.0, 0.4375, 1.2142857142857142]
)
Test song: 29 numMeasures: 16.0
Contains correct down beat 5
Remaining DownBeats
0:3:15.0: [0.0, 0.0, 0.0, 0.0, 0.0, 15.0, 0.0, 15.0, 32.0, 0.46875, 1.0]
0:6:4.0: [0.0, 0.0, 0.0, 0.0, 0.0, 4.0, 0.0, 4.0, 16.0, 0.25, 1.0]
1:3:19.5: [0.0, 15.0, 3.0, 0.0, 0.0, 0.0, 3.0, 14.0, 32.0, 0.4375, 1.2142857142857142]
1:4:14.5: [0.0, 5.0, 3.0, 0.0, 0.0, 6.0, 0.0, 14.0, 24.0, 0.5833333333333334, 1.0]
1:6:1.7976931348623157E308: [0.0, 11.0, 3.0, 0.0, 0.0, 0.0, 2.0, 12.0, 16.0, 0.75, 1.1666666666666667]
Passed anyways: 1:6:1.0: 

The original winner was one of the following(
0:4:2.0: [0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 2.0, 8.0, 0.25, 1.0]
1:4:2.0: [0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 8.0, 0.125, 1.0]
)
Test song: 31 numMeasures: 8.0
Contains correct down beat 2
Remaining DownBeats
0:4:2.0: [0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 2.0, 8.0, 0.25, 1.0]
1:4:2.2: [0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 8.0, 0.125, 1.0]
Passed anyways: 1:4:1.0: 

Test song: 32 numMeasures: 16.0
Passed

Test song: 33 numMeasures: 16.0
Contains correct down beat 3
Remaining DownBeats
0:3:5.5: [5.0, 0.0, 0.0, 3.0, 0.0, 0.0, 0.0, 8.0, 16.0, 0.5, 1.0]
0:6:3.0: [0.0, 0.0, 0.0, 0.0, 0.0, 3.0, 0.0, 3.0, 8.0, 0.375, 1.0]
1:6:3.0: [0.0, 0.0, 3.0, 0.0, 0.0, 0.0, 0.0, 3.0, 8.0, 0.375, 1.0]
Passed anyways: 0:3:1.0: 

Test song: 35 numMeasures: 17.0
Passed

Used a 2|4 rule FULL/NUM_MEASURES_MARKED at 2/9.0 to find the downbeat.
The original winner was one of the following(
0:2:24.0: [8.0, 0.0, 8.0, 4.0, 0.0, 0.0, 8.0, 12.0, 32.0, 0.375, 1.6666666666666667]
)
Test song: 36 numMeasures: 16.0
Contains correct down beat 3
Remaining DownBeats
0:2:16.8: [8.0, 0.0, 8.0, 4.0, 0.0, 0.0, 8.0, 12.0, 32.0, 0.375, 1.6666666666666667]
0:4:2.147483647E9: [8.0, 0.0, 0.0, 0.0, 0.0, 4.0, 1.0, 11.0, 16.0, 0.6875, 1.0909090909090908]
0:6:7.4: [3.0, 1.0, 2.0, 0.0, 0.0, 1.0, 0.0, 6.0, 11.0, 0.5454545454545454, 1.0]
Passed anyways: 0:4:1.0: 

Test song: 38 numMeasures: 16.0
Contains correct down beat 2
Remaining DownBeats
0:4:4.0: [0.0, 0.0, 0.0, 0.0, 0.0, 4.0, 0.0, 4.0, 16.0, 0.25, 1.0]
1:4:12.8: [0.0, 8.0, 4.0, 0.0, 0.0, 0.0, 4.0, 7.0, 16.0, 0.4375, 1.5714285714285714]
Passed anyways: 1:4:1.0: 

Test song: 39 numMeasures: 16.0
Contains correct down beat 2
Remaining DownBeats
0:4:4.0: [0.0, 0.0, 2.0, 0.0, 0.0, 2.0, 0.0, 4.0, 16.0, 0.25, 1.0]
1:4:10.8: [4.0, 4.0, 2.0, 0.0, 0.0, 0.0, 0.0, 9.0, 16.0, 0.5625, 1.0]
Passed anyways: 1:4:1.0: 

Test song: 40 numMeasures: 16.0
Passed

Test song: 41 numMeasures: 16.0
Contains correct down beat 2
Remaining DownBeats
0:4:4.0: [0.0, 0.0, 0.0, 0.0, 0.0, 4.0, 0.0, 4.0, 16.0, 0.25, 1.0]
1:4:6.4: [0.0, 4.0, 2.0, 0.0, 0.0, 0.0, 1.0, 4.0, 16.0, 0.25, 1.25]
Passed anyways: 1:4:1.0: 

Test song: 42 numMeasures: 16.0
Contains correct down beat 2
Remaining DownBeats
0:3:15.7: [5.0, 2.0, 6.0, 2.0, 0.0, 2.0, 6.0, 11.0, 16.0, 0.6875, 1.5454545454545454]
0:6:11.5: [4.0, 1.0, 2.0, 0.0, 0.0, 4.0, 4.0, 7.0, 8.0, 0.875, 1.5714285714285714]
Passed anyways: 0:3:1.0: 

Test song: 43 numMeasures: 24.0
Contains correct down beat 2
Remaining DownBeats
0:3:9.4: [0.0, 4.0, 1.0, 3.0, 0.0, 4.0, 1.0, 11.0, 24.0, 0.4583333333333333, 1.0909090909090908]
0:6:11.3: [0.0, 3.0, 1.0, 0.0, 0.0, 7.0, 2.0, 9.0, 12.0, 0.75, 1.2222222222222223]
													Failed: 0:3:1.0: 

Test song: 44 numMeasures: 34.0
Contains correct down beat 2
Remaining DownBeats
0:3:18.400000000000002: [7.0, 7.0, 0.0, 7.0, 0.0, 3.0, 0.0, 24.0, 34.0, 0.7058823529411765, 1.0]
0:6:24.3: [7.0, 6.0, 0.0, 0.0, 0.0, 10.0, 9.0, 14.0, 17.0, 0.8235294117647058, 1.6428571428571428]
													Failed: 0:3:1.0: 

Used a 2|4 rule FULL/NUM_MEASURES_MARKED at 2/9.0 to find the downbeat.
The original winner was one of the following(
0:2:7.0: [2.0, 0.0, 3.0, 2.0, 0.0, 0.0, 2.0, 5.0, 16.0, 0.3125, 1.4]
)
Test song: 45 numMeasures: 8.0
Contains correct down beat 3
Remaining DownBeats
0:2:5.2: [2.0, 0.0, 3.0, 2.0, 0.0, 0.0, 2.0, 5.0, 16.0, 0.3125, 1.4]
0:4:2.147483647E9: [2.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 4.0, 8.0, 0.5, 1.0]
0:6:3.1: [0.0, 1.0, 2.0, 0.0, 0.0, 0.0, 0.0, 2.0, 6.0, 0.3333333333333333, 1.0]
Passed anyways: 0:4:1.0: 

Used a 2|4 rule FULL/NUM_MEASURES_MARKED at 2/9.0 to find the downbeat.
The original winner was one of the following(
0:2:23.0: [6.0, 0.0, 11.0, 4.0, 0.0, 0.0, 6.0, 15.0, 32.0, 0.46875, 1.4]
)
Test song: 46 numMeasures: 16.0
Contains correct down beat 3
Remaining DownBeats
0:2:17.6: [6.0, 0.0, 11.0, 4.0, 0.0, 0.0, 6.0, 15.0, 32.0, 0.46875, 1.4]
0:4:2.147483647E9: [5.0, 0.0, 2.0, 0.0, 0.0, 4.0, 1.0, 10.0, 16.0, 0.625, 1.1]
0:6:9.4: [3.0, 1.0, 4.0, 0.0, 0.0, 1.0, 2.0, 7.0, 11.0, 0.6363636363636364, 1.2857142857142858]
Passed anyways: 0:4:1.0: 

Test song: 47 numMeasures: 12.0
Contains correct down beat 2
Remaining DownBeats
0:4:4.1: [0.0, 1.0, 0.0, 2.0, 0.0, 3.0, 1.0, 5.0, 12.0, 0.4166666666666667, 1.2]
0:6:6.300000000000001: [0.0, 3.0, 0.0, 0.0, 0.0, 3.0, 0.0, 6.0, 8.0, 0.75, 1.0]
													Failed: 0:4:1.0: 

Test song: 48 numMeasures: 16.0
Contains correct down beat 4
Remaining DownBeats
0:2:18.0: [0.0, 0.0, 18.0, 3.0, 0.0, 0.0, 0.0, 21.0, 32.0, 0.65625, 1.0]
0:4:6.0: [0.0, 0.0, 3.0, 0.0, 0.0, 3.0, 0.0, 6.0, 16.0, 0.375, 1.0]
0:6:8.1: [0.0, 1.0, 7.0, 0.0, 0.0, 0.0, 0.0, 8.0, 11.0, 0.7272727272727273, 1.0]
1:4:3.0: [0.0, 0.0, 3.0, 0.0, 0.0, 0.0, 0.0, 3.0, 16.0, 0.1875, 1.0]
													Failed: 0:4:1.0: 

Test song: 49 numMeasures: 10.0
Contains correct down beat 2
Remaining DownBeats
0:6:9.0: [0.0, 0.0, 0.0, 0.0, 0.0, 9.0, 0.0, 9.0, 10.0, 0.9, 1.0]
1:6:6.6: [1.0, 5.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.0, 10.0, 0.6, 1.0]
													Failed: 1:6:1.0: 

Test song: 50 numMeasures: 24.0
Contains correct down beat 4
Remaining DownBeats
0:2:6.0: [0.0, 0.0, 6.0, 3.0, 0.0, 0.0, 0.0, 9.0, 24.0, 0.375, 1.0]
0:4:7.0: [0.0, 0.0, 4.0, 0.0, 0.0, 3.0, 0.0, 7.0, 12.0, 0.5833333333333334, 1.0]
0:6:4.1: [0.0, 1.0, 2.0, 0.0, 0.0, 1.0, 0.0, 4.0, 8.0, 0.5, 1.0]
1:4:3.0: [0.0, 0.0, 3.0, 0.0, 0.0, 0.0, 0.0, 3.0, 12.0, 0.25, 1.0]
													Failed: 0:2:1.0: 

Used a 2|4 rule FULL/NUM_MEASURES_MARKED at 2/9.0 to find the downbeat.
The original winner was one of the following(
0:2:25.0: [6.0, 0.0, 13.0, 4.0, 0.0, 0.0, 6.0, 17.0, 24.0, 0.7083333333333334, 1.3529411764705883]
)
Test song: 51 numMeasures: 12.0
Contains correct down beat 3
Remaining DownBeats
0:2:19.6: [6.0, 0.0, 13.0, 4.0, 0.0, 0.0, 6.0, 17.0, 24.0, 0.7083333333333334, 1.3529411764705883]
0:4:2.147483647E9: [6.0, 0.0, 2.0, 0.0, 0.0, 4.0, 2.0, 10.0, 12.0, 0.8333333333333334, 1.2]
0:6:8.3: [2.0, 1.0, 4.0, 0.0, 0.0, 1.0, 2.0, 6.0, 8.0, 0.75, 1.3333333333333333]
Passed anyways: 0:4:1.0: 

Test song: 53 numMeasures: 16.0
Contains correct down beat 8
Remaining DownBeats
0:2:NaN: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 16.0, 0.0, NaN]
0:3:2.0: [0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 2.0, 11.0, 0.18181818181818182, 1.0]
0:4:NaN: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 0.0, NaN]
0:6:NaN: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.0, 0.0, NaN]
1:2:4.0: [0.0, 0.0, 4.0, 0.0, 0.0, 0.0, 0.0, 4.0, 16.0, 0.25, 1.0]
1:3:1.0: [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 11.0, 0.09090909090909091, 1.0]
1:4:2.0: [0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 2.0, 8.0, 0.25, 1.0]
1:6:1.0: [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 6.0, 0.16666666666666666, 1.0]
Passed anyways: 1:2:1.0: 

Test song: 54 numMeasures: 16.0
Contains correct down beat 7
Remaining DownBeats
0:2:9.0: [0.0, 0.0, 9.0, 4.0, 0.0, 0.0, 0.0, 13.0, 24.0, 0.5416666666666666, 1.0]
0:3:5.0: [0.0, 0.0, 1.0, 0.0, 0.0, 4.0, 0.0, 5.0, 16.0, 0.3125, 1.0]
0:4:8.0: [0.0, 0.0, 4.0, 0.0, 0.0, 4.0, 0.0, 8.0, 12.0, 0.6666666666666666, 1.0]
0:6:4.0: [0.0, 0.0, 0.0, 0.0, 0.0, 4.0, 0.0, 4.0, 8.0, 0.5, 1.0]
1:3:5.4: [0.0, 4.0, 1.0, 0.0, 0.0, 0.0, 0.0, 4.0, 16.0, 0.25, 1.0]
1:4:5.0: [0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 0.0, 5.0, 12.0, 0.4166666666666667, 1.0]
1:6:NaN: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 0.0, NaN]
													Failed: 1:3:1.0: 

Test song: 55 numMeasures: 16.0
Contains correct down beat 2
Remaining DownBeats
0:4:4.0: [0.0, 0.0, 0.0, 0.0, 0.0, 4.0, 0.0, 4.0, 16.0, 0.25, 1.0]
1:4:20.9: [0.0, 9.0, 11.0, 0.0, 0.0, 0.0, 8.0, 11.0, 16.0, 0.6875, 1.7272727272727273]
Passed anyways: 1:4:1.0: 

Test song: 56 numMeasures: 10.0
Contains correct down beat 3
Remaining DownBeats
0:2:9.1: [1.0, 0.0, 8.0, 2.0, 0.0, 0.0, 1.0, 10.0, 20.0, 0.5, 1.1]
0:4:4.1: [1.0, 0.0, 1.0, 0.0, 0.0, 2.0, 0.0, 4.0, 10.0, 0.4, 1.0]
0:6:6.2: [1.0, 1.0, 4.0, 0.0, 0.0, 0.0, 1.0, 5.0, 7.0, 0.7142857142857143, 1.2]
													Failed: 0:4:1.0: 

Test song: 57 numMeasures: 14.0
Contains correct down beat 2
Remaining DownBeats
0:3:11.0: [0.0, 10.0, 0.0, 1.0, 0.0, 0.0, 0.0, 11.0, 14.0, 0.7857142857142857, 1.0]
0:6:5.4: [0.0, 4.0, 0.0, 0.0, 0.0, 1.0, 0.0, 5.0, 7.0, 0.7142857142857143, 1.0]
Passed anyways: 0:3:1.0: 

Used a 2|4 rule FULL/NUM_MEASURES_MARKED at 2/9.0 to find the downbeat.
Test song: 58 numMeasures: 16.0
Contains correct down beat 3
Remaining DownBeats
0:2:10.5: [5.0, 0.0, 5.0, 8.0, 0.0, 0.0, 5.0, 13.0, 32.0, 0.40625, 1.3846153846153846]
0:4:2.147483647E9: [5.0, 0.0, 0.0, 0.0, 0.0, 8.0, 0.0, 13.0, 16.0, 0.8125, 1.0]
0:6:9.5: [2.0, 3.0, 2.0, 0.0, 0.0, 2.0, 0.0, 9.0, 11.0, 0.8181818181818182, 1.0]
Passed anyways: 0:4:1.0: 

Test song: 59 numMeasures: 15.0
Passed

Test song: 60 numMeasures: 16.0
Passed

Test song: 61 numMeasures: 8.0
Contains correct down beat 4
Remaining DownBeats
0:2:0.0: [0.0, 0.0, 0.0, 4.0, 0.0, 0.0, 0.0, 4.0, 16.0, 0.25, 1.0]
0:4:4.0: [0.0, 0.0, 0.0, 0.0, 0.0, 4.0, 0.0, 4.0, 8.0, 0.5, 1.0]
0:6:3.2: [0.0, 2.0, 0.0, 0.0, 0.0, 1.0, 0.0, 2.0, 6.0, 0.3333333333333333, 1.0]
1:4:NaN: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 0.0, NaN]
Passed anyways: 0:4:1.0: 

Passed 45/53: 0.8490566037735849















Test song: 43 numMeasures: 24.0
Contains correct down beat 2
Remaining DownBeats
0:3:9.4: [0.0, 4.0, 1.0, 3.0, 0.0, 4.0, 1.0, 11.0, 24.0, 0.4583333333333333, 1.0909090909090908]
0:6:11.3: [0.0, 3.0, 1.0, 0.0, 0.0, 7.0, 2.0, 9.0, 12.0, 0.75, 1.2222222222222223]
													Failed: 0:3:1.0: 
													I don't know what to do



Test song: 44 numMeasures: 34.0
Contains correct down beat 2
Remaining DownBeats
0:3:18.400000000000002: [7.0, 7.0, 0.0, 7.0, 0.0, 3.0, 0.0, 24.0, 34.0, 0.7058823529411765, 1.0]
0:6:24.3: [7.0, 6.0, 0.0, 0.0, 0.0, 10.0, 9.0, 14.0, 17.0, 0.8235294117647058, 1.6428571428571428]
													Failed: 0:3:1.0:
													I don't know what to do

Test song: 47 numMeasures: 12.0
Contains correct down beat 2
Remaining DownBeats
0:4:4.1:               [0.0, 1.0, 0.0, 2.0, 0.0, 3.0, 1.0, 5.0, 12.0, 0.4166666666666667, 1.2]
0:6:6.300000000000001: [0.0, 3.0, 0.0, 0.0, 0.0, 3.0, 0.0, 6.0, 8.0,  0.75,               1.0]
													Failed: 0:4:1.0: 
													I don't know what to do

Test song: 48 numMeasures: 16.0
Contains correct down beat 4
Remaining DownBeats
0:2:18.0: [0.0, 0.0, 18.0, 3.0, 0.0, 0.0, 0.0, 21.0, 32.0, 0.65625, 1.0]
0:4:6.0:  [0.0, 0.0, 3.0,  0.0, 0.0, 3.0, 0.0, 6.0,  16.0, 0.375,   1.0]
0:6:8.1:  [0.0, 1.0, 7.0,  0.0, 0.0, 0.0, 0.0, 8.0,  11.0, 0.7272,  1.0]
1:4:3.0:  [0.0, 0.0, 3.0,  0.0, 0.0, 0.0, 0.0, 3.0,  16.0, 0.1875,  1.0]
													Failed: 0:4:1.0: 
													Maybe decrease ratio to 3/21
Test song: 49 numMeasures: 10.0
Contains correct down beat 2
Remaining DownBeats
0:6:9.0: [0.0, 0.0, 0.0, 0.0, 0.0, 9.0, 0.0, 9.0, 10.0, 0.9, 1.0]
1:6:6.6: [1.0, 5.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.0, 10.0, 0.6, 1.0]
													Failed: 1:6:1.0: 
													Maybe increase value of downbeats from 1.1 to 1.5
Test song: 50 numMeasures: 24.0
Contains correct down beat 4
Remaining DownBeats
0:2:6.0: [0.0, 0.0, 6.0, 3.0, 0.0, 0.0, 0.0, 9.0, 24.0, 0.375, 1.0]
0:4:7.0: [0.0, 0.0, 4.0, 0.0, 0.0, 3.0, 0.0, 7.0, 12.0, 0.5833333333333334, 1.0]
0:6:4.1: [0.0, 1.0, 2.0, 0.0, 0.0, 1.0, 0.0, 4.0, 8.0, 0.5, 1.0]
1:4:3.0: [0.0, 0.0, 3.0, 0.0, 0.0, 0.0, 0.0, 3.0, 12.0, 0.25, 1.0]
													Failed: 0:2:1.0: 
													Why did this fail? ratio rule should have?
Test song: 54 numMeasures: 16.0
Contains correct down beat 7
Remaining DownBeats
0:2:9.0: [0.0, 0.0, 9.0, 4.0, 0.0, 0.0, 0.0, 13.0, 24.0, 0.5416666666666666, 1.0]
0:3:5.0: [0.0, 0.0, 1.0, 0.0, 0.0, 4.0, 0.0, 5.0, 16.0, 0.3125, 1.0]
0:4:8.0: [0.0, 0.0, 4.0, 0.0, 0.0, 4.0, 0.0, 8.0, 12.0, 0.6666666666666666, 1.0]
0:6:4.0: [0.0, 0.0, 0.0, 0.0, 0.0, 4.0, 0.0, 4.0, 8.0, 0.5, 1.0]
1:3:5.4: [0.0, 4.0, 1.0, 0.0, 0.0, 0.0, 0.0, 4.0, 16.0, 0.25, 1.0]
1:4:5.0: [0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 0.0, 5.0, 12.0, 0.4166666666666667, 1.0]
1:6:NaN: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 0.0, NaN]
													Failed: 1:3:1.0:
													I have no idea. 
Test song: 56 numMeasures: 10.0
Contains correct down beat 3
Remaining DownBeats
		
	  f    f     up  ful  	l    l  n>1   
0:2:9.1: [1.0, 0.0, 8.0, 2.0, 0.0, 0.0, 1.0, 10.0, 20.0, 0.5, 1.1]
0:4:4.1: [1.0, 0.0, 1.0, 0.0, 0.0, 2.0, 0.0, 4.0, 10.0, 0.4, 1.0]
0:6:6.2: [1.0, 1.0, 4.0, 0.0, 0.0, 0.0, 1.0, 5.0, 7.0, 0.7142857142857143, 1.2]
													Failed: 0:4:1.0: 
													I have no idea....changing to firstNote > second maybe add
													a third column where the value of other downbeeat are not
													counted in this Mark
				Validate the file is correct.	
